import childProcess from 'child_process';
import fs from 'fs';
import path from 'path';
import { DocspecTransformer } from './transformation';
import type { DocspecObject } from './types';

export { groupSort } from './utils';

/**
 * Processes the Python documentation generated by `pydoc-markdown` and transforms it into a format
 * accepted by the TypeDoc JSON generator.
 */
export function processPythonDocs({
	pythonModulePath,
	moduleShortcutsPath,
	outPath,
}: {
	pythonModulePath: string;
	moduleShortcutsPath: string;
	outPath: string;
}) {
	const pydocMarkdownDumpPath = path.join(__dirname, './pydoc-markdown-dump.json');

	childProcess.spawnSync('python', [
		path.join(__dirname, './docspec-gen/generate_ast.py'),
		'-i',
		pythonModulePath,
		pydocMarkdownDumpPath,
	]);

	const moduleShortcuts = JSON.parse(fs.readFileSync(moduleShortcutsPath, 'utf8')) as Record<
		string,
		string
	>;

	const pydocMarkdownDump = JSON.parse(
		fs.readFileSync(pydocMarkdownDumpPath, 'utf8'),
	) as DocspecObject[];

	const docspecTransformer = new DocspecTransformer({
		moduleShortcuts,
	});

	const typedocApiReference = docspecTransformer.transform(pydocMarkdownDump);

	fs.writeFileSync(outPath, JSON.stringify(typedocApiReference, null, 4));
}
